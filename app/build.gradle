apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "br.com.felipeacerbi.carpinner"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable = true
        }
    }

    flavorDimensions("default")
    productFlavors {
        prod {
            dimension "default"

            buildConfigField "String", "BASE_URL", "\"https://cdn.sixt.io/codingtask/\""
        }
        instrumentation {
            dimension "default"

            buildConfigField "String", "BASE_URL", "\"http://localhost:8080/\""
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0-alpha04'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation "androidx.fragment:fragment-ktx:$fragment"

    // AAC
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle"
    testImplementation "androidx.arch.core:core-testing:$archTest"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewModelKtx"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    implementation "androidx.test.espresso:espresso-idling-resource:$espresso"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    // Koin
    implementation "org.koin:koin-android:$koin"
    implementation "org.koin:koin-android-viewmodel:$koin"

    // Mockk
    implementation "io.mockk:mockk:$mockkVersion"

    // MockWebServer
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServer"

    // OkHttp3
    implementation "com.squareup.okhttp3:okhttp:$okHttp3"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp3"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$gson"

    // Tests
    testImplementation 'junit:junit:4.13-beta-3'
    androidTestImplementation "androidx.test.ext:junit:$junitExt"
    androidTestImplementation "androidx.test:runner:$test"
    androidTestImplementation "androidx.test:rules:$test"
    debugImplementation "androidx.test:core:1.2.1-alpha02"
    debugImplementation "androidx.fragment:fragment-testing:$fragment"

    // Modules
    implementation project(':common')
}
